{
  "$kind": "Microsoft.AdaptiveDialog",
  "$designer": {
    "name": "SauterBotOne",
    "description": "",
    "id": "4pM5gc"
  },
  "autoEndDialog": true,
  "defaultResultProperty": "dialog.result",
  "triggers": [
    {
      "$kind": "Microsoft.OnConversationUpdateActivity",
      "$designer": {
        "id": "376720",
        "comment": "This trigger runs when a conversation update activity is sent to the bot. This indicates a user or bot being added or removed from a conversation."
      },
      "actions": [
        {
          "$kind": "Microsoft.Foreach",
          "$designer": {
            "id": "518944",
            "name": "Loop: for each item",
            "comment": "For each member added to the conversation."
          },
          "itemsProperty": "turn.Activity.membersAdded",
          "actions": [
            {
              "$kind": "Microsoft.IfCondition",
              "$designer": {
                "id": "641773",
                "name": "Branch: if/else",
                "comment": "Checks that that member added ID does not match the bot ID. This prevents the greeting message from being sent when the bot is added to a conversation."
              },
              "condition": "=string(dialog.foreach.value.id) != string(turn.Activity.Recipient.id)",
              "actions": [
                {
                  "$kind": "Microsoft.BeginDialog",
                  "$designer": {
                    "id": "PlH6iz",
                    "comment": "Launches the WelcomeDialog containing logic for greeting users."
                  },
                  "activityProcessed": true,
                  "dialog": "WelcomeDialog"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "e1i6lY",
        "name": "Cancel",
        "comment": "Triggered when the Cancel intent is recognized in the user's utterance."
      },
      "intent": "Cancel",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "FDsuIq",
            "comment": "Launches the CancelDialog."
          },
          "activityProcessed": true,
          "dialog": "CancelDialog"
        }
      ],
      "condition": "=turn.recognized.score > 0.9"
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "9wETGs",
        "name": "Help",
        "comment": "Triggered when the Help intent is recognized in the user's utterance."
      },
      "intent": "Help",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "B0NP8m",
            "comment": "Launches the HelpDialog."
          },
          "activityProcessed": true,
          "dialog": "HelpDialog"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnError",
      "$designer": {
        "id": "aLQGr7",
        "comment": "Triggered when an error event is thrown by the dialog stack. "
      },
      "actions": [
        {
          "$kind": "Microsoft.TelemetryTrackEventAction",
          "$designer": {
            "id": "Aucn7t",
            "comment": "Logs the error received in the Telelmetry Client (typically Application Insights for production instances)."
          },
          "eventName": "ErrorOccurred",
          "properties": {
            "Type": "=turn.dialogEvent.value.className",
            "Exception": "=turn.dialogEvent.value"
          }
        },
        {
          "$kind": "Microsoft.SendActivity",
          "$designer": {
            "id": "2outgQ",
            "comment": "Shows error message to user."
          },
          "activity": "${SendActivity_ErrorOccured()}"
        },
        {
          "$kind": "Microsoft.SendActivity",
          "$designer": {
            "id": "jC7VFS"
          },
          "activity": "${SendActivity_jC7VFS()}"
        },
        {
          "$kind": "Microsoft.TraceActivity",
          "$designer": {
            "id": "NVFqr5",
            "comment": "Emits a trace activity with the error value that is visible in local testing channels such as the Bot Framework Composer Web Chat window and the Bot Framework Emulator."
          },
          "name": "=turn.dialogEvent.value.className",
          "valueType": "Exception",
          "value": "=turn.dialogEvent.value",
          "label": "ErrorOccurred"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnUnknownIntent",
      "$designer": {
        "id": "FOxcnx",
        "comment": "This trigger fires when an incoming activity is not handled by any other trigger."
      },
      "actions": [
        {
          "$kind": "Microsoft.SendActivity",
          "$designer": {
            "id": "IQMEuO",
            "comment": "It is recommended to show a message to the user when the bot does not know how to handle an incoming activity and provide follow up options or a help message.\n"
          },
          "activity": "${SendActivity_IQMEuO()}"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "bmqW9B",
        "name": "test"
      },
      "intent": "test",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "SoUtwK"
          },
          "activityProcessed": true,
          "dialog": "TestCard"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "jg5O99",
        "name": "GetAlarm"
      },
      "intent": "GetAlarm",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "4Ghl54"
          },
          "activityProcessed": true,
          "dialog": "TestCard"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "IuviUm",
        "name": "GetTrend"
      },
      "intent": "GetTrend",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "izmemX"
          },
          "activityProcessed": true,
          "dialog": "GetTrend"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "HNKPm3",
        "name": "goToSVC"
      },
      "intent": "goToSVC",
      "condition": true,
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "vuR0Ut"
          },
          "activityProcessed": true,
          "dialog": "goToSVC"
        },
        {
          "$kind": "Microsoft.IfCondition",
          "$designer": {
            "id": "szWWNn"
          },
          "elseActions": [
            {
              "$kind": "Microsoft.SendActivity",
              "$designer": {
                "id": "6XKNOl"
              },
              "activity": "${SendActivity_6XKNOl()}"
            }
          ],
          "actions": [
            {
              "$kind": "Microsoft.Bot.Components.CreateAdaptiveCard",
              "$designer": {
                "id": "kaHAKS"
              },
              "template": {
                "type": "AdaptiveCard",
                "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                "version": "1.2",
                "body": []
              }
            }
          ]
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "iCwj5J",
        "name": "building"
      },
      "intent": "building",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "8obGdJ"
          },
          "activityProcessed": true,
          "dialog": "building"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "sae58u",
        "name": "floor"
      },
      "intent": "floor",
      "condition": true,
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "IfaoPo"
          },
          "activityProcessed": true,
          "dialog": "floor"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "wJjaMS",
        "name": "room"
      },
      "intent": "room",
      "condition": true,
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "sJUTkM"
          },
          "activityProcessed": true,
          "dialog": "room"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "zmuPqs",
        "name": "heating"
      },
      "intent": "heating",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "LzHNgY"
          },
          "activityProcessed": true,
          "dialog": "heating"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "4do4iC",
        "name": "cooling"
      },
      "intent": "cooling",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "Ziu97j"
          },
          "activityProcessed": true,
          "dialog": "cooling"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "VaZ4yp",
        "name": "ventilation"
      },
      "intent": "ventilation",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "9BrtdJ"
          },
          "activityProcessed": true,
          "dialog": "ventilation"
        }
      ]
    },
    {
      "$kind": "Microsoft.OnIntent",
      "$designer": {
        "id": "0Ggpw3",
        "name": "search"
      },
      "intent": "search",
      "actions": [
        {
          "$kind": "Microsoft.BeginDialog",
          "$designer": {
            "id": "m8UdFA"
          },
          "activityProcessed": true,
          "dialog": "search"
        }
      ],
      "condition": true
    }
  ],
  "generator": "SauterBotOne.lg",
  "id": "SauterBotOne",
  "recognizer": "SauterBotOne.lu.qna"
}
